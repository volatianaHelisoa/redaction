@model RedactApplication.Models.COMMANDEViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/LayoutConnected.cshtml";

}
@if (Session["name"] != null && @Session["role"] != null && @Session["role"].ToString() != "5")
{
    <main id="wrapper">
        <div id="single-container">
            <div class="onglets ease-in-out">
                <ul>
                    <li> @Html.ActionLink("Dashboard", "Dashboard", new { controller = "Home" }) </li>
                    @if (@Session["role"] != null && @Session["role"].ToString() != "2" && @Session["role"].ToString() != "1")
                    {
                        <li> @Html.ActionLink("Utilisateurs", "ListeUser", new { controller = "Home" }) </li>
                    }
                    <li>@Html.ActionLink("Commandes", "ListCommandes", new { controller = "Commandes" }, new { @class = "active" })</li>
                    @if (@Session["role"] != null && @Session["role"].ToString() != "1")
                    {
                        <li>@Html.ActionLink("Factures", "ListFacture", new { controller = "Facture" })</li>
                    }
                </ul>
            </div>
            <div class="card back-office with-shadow">
                <div class="head">
                    <h1>Éditer la commande</h1>
                    <p>Veuillez remplir les champs requis (*) et appuyez sur enregistrer la pour mettre à jour</p>
                </div>
                @using (Html.BeginForm("EditCommande", "Commandes", FormMethod.Post, new { @class = "formfields" }))
                {
                    @Html.AntiForgeryToken();
                    <input type="hidden" name="idCommande" value="@Model.commandeId">
                    <input type="hidden" id="limit" value="@Model.nombre_mots">
                    <input type="hidden" id="mot_cle_pricipal" value="@Model.mot_cle_pricipal">
                    <!-- Champs -->
                    <div class="container clearfix">
                        <div class="section-title-rounded">
                            <span>Livraison</span>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <a class="btn btn-success" style="display: inline-block; margin-bottom: 2em">Check duplicate</a>
                                <a class="btn btn-primary" style="display: inline-block; margin-left: 1em; margin-bottom: 2em">Corriger</a>
                            </div>
                            <section class="col-md-9 commande-view">
                                <div class="wrap">
                                    <div class="blk">
                                        <strong>Titre :</strong>
                                        @Html.TextBoxFor(x => x.balise_titre)
                                    </div>
                                    <div class="blk">
                                        <strong>Contenu : </strong>
                                        @Html.TextAreaFor(m => m.contenu_livre, new { rows = "20", style = "resize:none;", @class = "textarea-editor command-edition", maxlength = @Html.DisplayNameFor(m => m.nombre_mots) })
                                    </div>
                                    <span>
                                        <strong>  Nombre de mots demandés </strong>
                                        <span id="balise_titre">
                                            @Html.DisplayFor(x => x.nombre_mots)
                                        </span>
                                    </span>
                                </div>
                            </section>
                            <section class="col-md-3 commande-resume">
                                <div>
                                    <span>Mots clés</span>
                                   
                                    @Html.DisplayFor(x => x.mot_cle_secondaire)
                                   
                                </div>
                            </section>
                            <section class="col-md-3">
                                <a class="btn btn-dark btn-medium" id="btn-optimisation" style="display: block; margin: 20px 0">Voir l'optimisation</a>
                                <div class="scores">
                                    <dd class="item">
                                        <span>DSEO</span>
                                        <div class="separator"></div>
                                        <span id="res_dseo"></span>
                                    </dd>
                                    <dd class="item">
                                        <span>SOSEO</span>
                                        <div class="separator"></div>
                                        <span id="res_soseo"></span>
                                    </dd>
                                </div>
                            </section>

                            <section class="clearfix submit-area" id="toast">
                                <input type="submit" value="Envoyer" class="btn btn-success" id="btn-save" />
                                @Html.ActionLink("Annuler", "ListCommandes", "Commandes", new { @class = "btn btn-warning" })
                            </section>
                        </div>
                    </div>

                }

            </div>
        </div>
    </main>
}
else
{ Response.Redirect("~/Login/Accueil"); }
<!--  Dialogue succès ajout user   -->
<div id="addUserPopUp">

</div>

<!--  Dialogue error valid data   -->
<div id="errorValidDataUserPopUp">

</div>
@section Scripts
{
    <link rel="stylesheet" href="~/Content/css/bootstrap-datepicker3.css" />
    <link rel="stylesheet" href="~/Content/css/elements/commandes.css" />

    <script type="text/javascript" src="~/Scripts/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript" src="~/Scripts/scriptredacteur.js"></script>


    <script type="text/javascript" src="//cdn.tinymce.com/4/tinymce.min.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {
            var date = new Date();
            var words = 0;
            date.setDate(date.getDate());
            var date_input = $('input[name="date_livraison"]'); //our date input has the name "date"
            var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
            var options = {
                format: 'dd/mm/yyyy',
                container: container,
                todayHighlight: true,
                autoclose: true,
                weekStart: 1,
                startDate: date
            };
            date_input.datepicker(options);

            tinymce.init({
                selector: 'textarea',
                height: 500,
                width: '100%',
                menubar: false,

                plugins: [
                    'advlist autolink lists link image charmap anchor textcolor',
                    'searchreplace visualblocks code fullscreen',
                    'insertdatetime media table contextmenu paste code  wordcount'
                ],
                toolbar: 'insert | undo redo |  formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
                content_css: [
                    '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                    '//www.tinymce.com/css/codepen.min.css'],
                setup: function (ed) {
                    ed.on('keyup', function (e) {
                        tinyMceChange(ed);
                        var contenu = $.trim($(this).text());
                       

                        var contenu_res = ed.getContent().replace(/(style="([^"]*)")/g, "");
                        var regex = /(&nbsp;|<([^>]+)>)/ig;
                        contenu_res = contenu_res.replace(regex, "");
                        words = ed.plugins.wordcount.getCount();
                        console.log(words);
                        var charLength = words.length;
                        var charLimit = $("#limit").val();
                        // Displays count
                        $(".left_char").html(charLength + " sur " + charLimit + " caractère(s) utilisé(s)");
                      
                    });
                    ed.on('change', function (e) {
                        words = ed.plugins.wordcount.getCount();

                        tinyMceChange(ed);
                    });
                }
            });
            function tinyMceChange(ed) {
                //console.debug('Editor contents was modified. Contents: ' + ed.getContent());
            }

            $("#tinymce").keypress(function () {

                var contenu = $.trim($(this).text());
                var charLength = contenu.length;
                var charLimit = $("#limit").val();


                // Displays count
                $(".left_char").html(words + " sur " + charLimit + " caractère(s) utilisé(s)");
                // Alert when max is reached
                if (charLength > charLimit) {
                    $(".left_char").html("<strong>Le nombre de caractères maximum de " +
                        charLimit +
                        " atteint.</strong>");
                }
            });

            $("#btn-save").click(function () {
                setCookie('words', words, 1);
            });

            function setCookie(name, value, days) {
                var expires = "";
                if (days) {
                    var date = new Date();
                    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                    expires = "; expires=" + date.toUTCString();
                }
                document.cookie = name + "=" + (value || "") + expires + "; path=/";
            }

            $(".scores").hide();

            $("#btn-optimisation").click(function () {
              
                var contenu_res = tinymce.activeEditor.getContent().replace(/(style="([^"]*)")/g, "");
                var regex = /(&nbsp;|<([^>]+)>)/ig;
                contenu_res = contenu_res.replace(regex, "");
                var mot_cle_pricipal = $("#mot_cle_pricipal").val();
                console.log(contenu_res);
                $.ajax({
                    type: 'GET',
                    url: '/Commandes/LoadScoreByContent',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",

                    data: {
                        contenu: contenu_res,
                        mot_cle_pricipal: mot_cle_pricipal
                    },

                    success: function (response) {
                        alert(response);
                    },
                    error: function (response) {
                        alert(response);
                        $(".scores").show();
                    }
                });
                $(".scores").show();
            });

        });



    </script>
}

