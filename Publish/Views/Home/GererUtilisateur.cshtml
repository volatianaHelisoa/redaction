@model RedactApplication.Models.UTILISATEURViewModel

@{
    ViewBag.Title = "Utilisateur";
    if (Model != null)
    {

        ViewBag.userId = Model.userId;
        Model.userNom = "";
        Model.userPrenom = "";
    }

    Layout = "~/Views/Shared/LayoutConnected.cshtml";
}
@section Scripts{

    <link rel="stylesheet" href="~/Content/css/elements/profil.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css" rel="stylesheet" />

    <script>
        jQuery("#CheckEditRedacteur").hide();
        $("#checkReferenceur").prop('checked', false);
        $("#checkRedacteur").prop('checked', false);
        $("#checkManager").prop('checked', false);

        jQuery(document).ready(function () {

            jQuery("input[name='selectedRole']").change(function () {
                var val = $(this).attr('id');

                switch (val) {
                    case "checkReferenceur":
                        if ($(this).is(':checked')) {
                            $("#checkManager").prop('checked', false);
                            $("#checkRedacteur").prop('checked', false);
                            jQuery("#CheckEditRedacteur").hide();
                        }
                        break;
                    case "checkRedacteur":
                        if ($(this).is(':checked')) {

                            $("#checkManager").prop('checked', false);
                            $("#checkReferenceur").prop('checked', false);

                            $("#redactVolume").prop('required', 'required');
                            $("#redactTarif").prop('required', 'required');
                            jQuery("#CheckEditRedacteur").show();

                        } else {
                            $("#redactVolume").prop('required', '');
                            $("#redactTarif").prop('required', '');
                            jQuery("#CheckEditRedacteur").hide();
                        }
                        break;
                    case "checkManager":
                        if ($(this).is(':checked')) {
                            $("#checkReferenceur").prop('checked', false);
                            $("#checkRedacteur").prop('checked', false);
                            jQuery("#CheckEditRedacteur").hide();
                        }
                        break;
                }
            })

            $('#SelectItemTheme').multiselect({
                includeSelectAllOption: true,
                nSelectedText: 'selection',
                nonSelectedText: 'Aucune selection',
                selectAllText: 'Tout selectionner',
                allSelectedText: 'Selections'

            });
        });

        function setrequiredprop(attr) {
            $("#checkManager").prop('checked', attr);
            $("#checkRedacteur").prop('checked', attr);
        }
    </script>

    @if (ViewBag.succes != null)
    {
        if (ViewBag.succes == 1)
        {
            <script>
                $("#addUserPopUp").modal();
                $("div#addUserPopUp").css("display", "block");
            </script>
        }

        else if (ViewBag.succes == 3)
        {
            <script>
                $("#errorValidDataUserPopUp").modal();
                $("div#errorValidDataUserPopUp").css("display", "block");
            </script>
        }
    }
}


@if (Session["name"] != null && @Session["role"] != null && @Session["role"].ToString() != "2" && @Session["role"].ToString() != "5")
{
    <main id="wrapper">
        <div id="single-container">
            <div class="onglets ease-in-out">
                <ul>
                    <li> @Html.ActionLink("Dashboard", "Dashboard", new { controller = "Home" }) </li>
                    @if (@Session["role"] != null && @Session["role"].ToString() != "2")
                    {
                        <li> @Html.ActionLink("Utilisateurs", "ListeUser", new { controller = "Home" }, new { @class = "active" }) </li>
                    }
                    <li>@Html.ActionLink("Commandes", "ListCommandes", new { controller = "Commandes" })</li>
                    @if (@Session["role"] != null && @Session["role"].ToString() != "1")
                    {
                        <li>@Html.ActionLink("Factures", "ListFacture", new { controller = "Facture" })</li>
                    }
                    </ul>
            </div>
            <div class="card back-office with-shadow">

                <div class="head">
                    <h1>Créer utilisateur</h1>
                    <p>Veuillez remplir les champs Requis (*) et appuyez sur Enregistrer pour créer un utilisateur</p>
                </div>


                @using (Html.BeginForm("EnregistrerUtilisateur", "Home", FormMethod.Post, new { @class = "formfields", @id = "enregistrerUtilisateur", enctype = "multipart/form-data" }))
                {
                    <fieldset>

                        <div class="head">
                            <div class="flex-content flex-jcenter-acenter edit-avatar">
                                <span class="profil-thumb">
                                    <img id="new-profil-preview" src="~/images/avatar.png" alt="" srcset="" />
                                </span>
                                <div class="flex-content flex-col change-avatar">
                                    <span class="file-name">Votre avatar</span>
                                    @Html.TextBoxFor(m => m.logoUrl, new { type = "file", @class = "fileTriger", name = "file", id = "user-profil", accept = "image/*" })
                                    <div class="input-custom">
                                        <label for="user-profil" class="label-file">Choisir</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Champs -->
                        <section class="clearfix">
                            <label for="" class="col-50 pull-left">
                                Nom (*)
                                @Html.TextBoxFor(x => x.userNom, new { @required = true })
                            </label>
                            <label for="" class="col-50 pull-right">
                                Prénom (*)
                                @Html.TextBoxFor(x => x.userPrenom, new { @required = true })
                            </label>
                            <label for="" class="col-50 pull-left">
                                E-mail (*)
                                @Html.TextBoxFor(x => x.userMail, new { @required = true, @type = "email" })
                                @if (ViewBag.ErrorUserValidation != null)
                                {
                                    <label class="error-msg ltl-consign input-error">Adresse mail invalide.</label>
                                }
                            </label>
                            <label for="" class="col-50 pull-right">
                                Skype
                                @Html.TextBoxFor(x => x.redactSkype)
                            </label>
                            <label for="" class="col-50 pull-left">
                                Téléphone
                                @Html.TextBoxFor(x => x.redactPhone, new { @placeholder = "331110011", @maxlength = 9 })
                                @if (ViewBag.ErrorPhoneValidation != null)
                                {
                                    <label class="error-msg ltl-consign input-error">Téléphone invalide.</label>
                                }
                            </label>
                        </section>
                        <section class="clearfix">
                            <div class="section-title">
                                <span>Role (*)</span>

                            </div>
                            <label for="" class="col-100">
                                @if (ViewBag.ErrorMessage != null)
                                {
                                    <label class="error-msg text-center">Veuillez selectionner un role.</label>
                                }
                                <label for="" class="col-100">
                                    <input type="checkbox" name="selectedRole" value="1" id="checkReferenceur" style="display: inline-block; width: auto; vertical-align: middle; margin: 10px 0;" /> Referenceur
                                </label>

                                <label for="" class="col-100">
                                    <input type="checkbox" name="selectedRole" value="2" id="checkRedacteur" style="display: inline-block; width: auto; vertical-align: middle; margin: 10px 0;" /> Redacteur
                                </label>

                                <label for="" class="col-100">
                                    <input type="checkbox" name="selectedRole" value="3" id="checkManager" style="display: inline-block; width: auto; vertical-align: middle; margin: 10px 0;" />  Manager
                                </label>

                            </label>

                            <span class="sep"></span>

                        </section>
                        <section class="clearfix" id="CheckEditRedacteur">
                            <div class="section-title">
                                <span>Redacteur informations</span>
                            </div>
                            <label for="" class="col-50 pull-left">
                                Tarif (*) (en Ariary)
                                @Html.TextBoxFor(x => x.redactTarif, new { @type = "number" })
                            </label>
                            <label for="" class="col-50 pull-right">
                                Volume / Jour (*)
                                @Html.TextBoxFor(x => x.redactVolume, new { @type = "number" })
                            </label>
                            <label for="" class="col-50 pull-left">
                                Niveau
                                @Html.DropDownListFor(x => x.redactNiveau,
                                                                new List<SelectListItem> {
                                                                    new SelectListItem { Value = " " , Text = "Selectionner niveau" },
                                                                    new SelectListItem { Value = "Bas" , Text = "Bas" },
                                                                    new SelectListItem { Value = "Moyen" , Text = "Moyen" },
                                                                    new SelectListItem { Value = "Avancé" , Text = "Avancé" }
                                                                })
                            </label>
                            <label for="" class="col-50 pull-right">
                                Thèmes
                                <div class="clearfix dropdown-area">

                                    @Html.DropDownListFor(x => Model.listThemeId, new SelectList(Model.ListTheme, "Value", "Text"), htmlAttributes: new { id = "SelectItemTheme", multiple = "multiple", name = "selectedTheme" })
                                </div>
                            </label>


                            <label for="" class="col-50 pull-left clearfix">
                                Mode de paiement
                                @Html.DropDownListFor(x => x.redactModePaiement,
                                                                 new List<SelectListItem> {
                                                                     new SelectListItem { Value = " " , Text = "Selectionner mode de paiement" },
                                                                     new SelectListItem { Value = "Chèque" , Text = "Chèque" },
                                                                     new SelectListItem { Value = "E-money" , Text = "E-money" }
                                                                 })
                            </label>

                        </section>

                        <section class="clearfix submit-area" id="toast">
                            <input type="submit" value="Enregistrer" class="btn btn-success">
                            @Html.ActionLink("Annuler", "ListeUser", "Home", new { }, new { @class = "btn btn-warning" })

                        </section>
                    </fieldset>
                }
            </div>
        </div>
        <!--  Dialogue succès ajout user   -->
        <div id="addUserPopUp" style="display:none" class="popup-notif">
            @Html.Partial("~/Views/Home/CreatedUserConfirmation.cshtml")
        </div>

        <!--  Dialogue error valid data   -->
        <div id="errorValidDataUserPopUp" style="display:none" class="popup-notif">
            @Html.Partial("~/Views/Home/ErrorUser.cshtml")
        </div>
    </main>


}
else
{ Response.Redirect("~/Login/Accueil"); }








<script>
    var selectAll = function () {

        $('.usr-sel :checkbox').each(function () {
            this.checked = true;
        });
    };

    var unSelectAll = function () {
        $('.usr-sel :checkbox').each(function () {
            this.checked = false;
        });
    };

    var GoToListUser = function (userId) {
        document.location.href = "../Home/ListeUser";
    };


</script>